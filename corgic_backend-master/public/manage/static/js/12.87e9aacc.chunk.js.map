{"version":3,"sources":["utils/consts.js","utils/axiosInstance.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_assignValue.js","../node_modules/lodash/_baseSet.js","../node_modules/lodash/set.js","../node_modules/semantic-ui-react/dist/es/modules/Checkbox/Checkbox.js","pages/Settings/Settings.js"],"names":["msgStatus","UNREAD","READ","siteStatusLiteral","NORMAL","MAINTENANCE","LOCKDOWN","userStatus","PENDING","ACTIVE","DISABLED","S3_BASE","API_ROOT","instance","axios","create","baseURL","defineProperty","require","module","exports","object","key","value","baseAssignValue","eq","hasOwnProperty","Object","prototype","objValue","call","undefined","assignValue","castPath","isIndex","isObject","toKey","path","customizer","index","length","lastIndex","nested","newValue","baseSet","Checkbox","_Component","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","apply","concat","_defineProperty","_assertThisInitialized","createRef","_this$props","props","disabled","radio","readOnly","checked","state","_this$props2","tabIndex","_isNil","e","id","_this$state","indeterminate","isInputClick","_invoke","inputRef","current","target","isLabelClick","labelRef","isRootClick","hasId","_objectSpread","isClickFromMouse","handleChange","stopPropagation","canToggle","trySetState","_this$state2","defaultPrevented","preventDefault","_this$state3","_set","_inherits","_createClass","setIndeterminate","_this$props3","className","label","name","slider","toggle","type","_this$state4","classes","cx","useKeyOnly","unhandled","getUnhandledProps","ElementType","getElementType","_partitionHTMLProps","partitionHTMLProps","htmlProps","htmlInputAttrs","_partitionHTMLProps2","_slicedToArray","htmlInputProps","rest","labelElement","createHTMLLabel","defaultProps","htmlFor","autoGenerateKey","React","createElement","_extends","onClick","handleClick","onChange","onMouseDown","handleMouseDown","onMouseUp","handleMouseUp","Ref","innerRef","computeTabIndex","Component","propTypes","Settings","auth","useContext","AuthContext","useState","status","setStatus","useEffect","a","get","headers","Authorization","admin","token","data","console","log","loadStatus","initialValues","lockdown","LOCKED","maintain","MAINTAIN","createAdmin","values","fr","post","success","toast","msg","error","setSubmitting","handleSubmit","patch","Header","size","dividing","Grid","columns","Column","Segment","enableReinitialize","onSubmit","style","marginBottom","setFieldValue","Button","primary","icon","labelPosition","isSubmitting","loading","Icon","email","validationSchema","yup","shape","required","Input","fluid","placeholder","onBlur","handleBlur","errors","touched"],"mappings":"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","file":"static/js/12.87e9aacc.chunk.js","sourcesContent":["\r\nexport const msgStatus = {\r\n    UNREAD: 0,\r\n    READ: 1\r\n}\r\n\r\nexport const siteStatusLiteral = {\r\n    NORMAL: 1,\r\n    MAINTENANCE: 2,\r\n    LOCKDOWN: 3\r\n}\r\n\r\nexport const userStatus = {\r\n    PENDING: 0,\r\n    ACTIVE: 1,\r\n    DISABLED: 2\r\n}\r\n\r\nconst dev = \"http://localhost:5000/\";\r\nconst prod = \"https://thegospelpage.com/\";\r\n\r\nexport const S3_BASE = \"https://library-cdn.s3-us-west-1.amazonaws.com\";\r\n\r\nexport const API_ROOT = prod;","import axios from \"axios\";\r\nimport { API_ROOT } from \"./consts\";\r\n\r\nconst instance = axios.create({ baseURL: `${API_ROOT}api` });\r\n\r\nexport default instance;","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var assignValue = require('./_assignValue'),\n    castPath = require('./_castPath'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = baseSet;\n","var baseSet = require('./_baseSet');\n\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nmodule.exports = set;\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _set from \"lodash/set\";\nimport _invoke from \"lodash/invoke\";\nimport _get from \"lodash/get\";\nimport _isNil from \"lodash/isNil\";\nimport { Ref } from '@stardust-ui/react-component-ref';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { createRef } from 'react';\nimport { AutoControlledComponent as Component, createHTMLLabel, customPropTypes, getElementType, getUnhandledProps, htmlInputAttrs, partitionHTMLProps, useKeyOnly } from '../../lib';\n\n/**\n * A checkbox allows a user to select a value from a small set of options, often binary.\n * @see Form\n * @see Radio\n */\nvar Checkbox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Checkbox, _Component);\n\n  function Checkbox() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Checkbox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Checkbox)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"inputRef\", createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"labelRef\", createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"canToggle\", function () {\n      var _this$props = _this.props,\n          disabled = _this$props.disabled,\n          radio = _this$props.radio,\n          readOnly = _this$props.readOnly;\n      var checked = _this.state.checked;\n      return !disabled && !readOnly && !(radio && checked);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"computeTabIndex\", function () {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      return disabled ? -1 : 0;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      var id = _this.props.id;\n      var _this$state = _this.state,\n          checked = _this$state.checked,\n          indeterminate = _this$state.indeterminate;\n\n      var isInputClick = _invoke(_this.inputRef.current, 'contains', e.target);\n\n      var isLabelClick = _invoke(_this.labelRef.current, 'contains', e.target);\n\n      var isRootClick = !isLabelClick && !isInputClick;\n      var hasId = !_isNil(id);\n      var isLabelClickAndForwardedToInput = isLabelClick && hasId; // https://github.com/Semantic-Org/Semantic-UI-React/pull/3351\n\n      if (!isLabelClickAndForwardedToInput) {\n        _invoke(_this.props, 'onClick', e, _objectSpread({}, _this.props, {\n          checked: !checked,\n          indeterminate: !!indeterminate\n        }));\n      }\n\n      if (_this.isClickFromMouse) {\n        _this.isClickFromMouse = false;\n\n        if (isLabelClick && !hasId) {\n          _this.handleChange(e);\n        } // Changes should be triggered for the slider variation\n\n\n        if (isRootClick) {\n          _this.handleChange(e);\n        }\n\n        if (isLabelClick && hasId) {\n          // To prevent two clicks from being fired from the component we have to stop the propagation\n          // from the \"input\" click: https://github.com/Semantic-Org/Semantic-UI-React/issues/3433\n          e.stopPropagation();\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      var checked = _this.state.checked;\n      if (!_this.canToggle()) return;\n\n      _invoke(_this.props, 'onChange', e, _objectSpread({}, _this.props, {\n        checked: !checked,\n        indeterminate: false\n      }));\n\n      _this.trySetState({\n        checked: !checked,\n        indeterminate: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseDown\", function (e) {\n      var _this$state2 = _this.state,\n          checked = _this$state2.checked,\n          indeterminate = _this$state2.indeterminate;\n\n      _invoke(_this.props, 'onMouseDown', e, _objectSpread({}, _this.props, {\n        checked: !!checked,\n        indeterminate: !!indeterminate\n      }));\n\n      if (!e.defaultPrevented) {\n        _invoke(_this.inputRef.current, 'focus');\n      } // Heads up!\n      // We need to call \"preventDefault\" to keep element focused.\n\n\n      e.preventDefault();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseUp\", function (e) {\n      var _this$state3 = _this.state,\n          checked = _this$state3.checked,\n          indeterminate = _this$state3.indeterminate;\n      _this.isClickFromMouse = true;\n\n      _invoke(_this.props, 'onMouseUp', e, _objectSpread({}, _this.props, {\n        checked: !!checked,\n        indeterminate: !!indeterminate\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setIndeterminate\", function () {\n      var indeterminate = _this.state.indeterminate;\n\n      _set(_this.inputRef, 'current.indeterminate', !!indeterminate);\n    });\n\n    return _this;\n  }\n\n  _createClass(Checkbox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setIndeterminate();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.setIndeterminate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          className = _this$props3.className,\n          disabled = _this$props3.disabled,\n          label = _this$props3.label,\n          id = _this$props3.id,\n          name = _this$props3.name,\n          radio = _this$props3.radio,\n          readOnly = _this$props3.readOnly,\n          slider = _this$props3.slider,\n          toggle = _this$props3.toggle,\n          type = _this$props3.type,\n          value = _this$props3.value;\n      var _this$state4 = this.state,\n          checked = _this$state4.checked,\n          indeterminate = _this$state4.indeterminate;\n      var classes = cx('ui', useKeyOnly(checked, 'checked'), useKeyOnly(disabled, 'disabled'), useKeyOnly(indeterminate, 'indeterminate'), // auto apply fitted class to compact white space when there is no label\n      // https://semantic-ui.com/modules/checkbox.html#fitted\n      useKeyOnly(_isNil(label), 'fitted'), useKeyOnly(radio, 'radio'), useKeyOnly(readOnly, 'read-only'), useKeyOnly(slider, 'slider'), useKeyOnly(toggle, 'toggle'), 'checkbox', className);\n      var unhandled = getUnhandledProps(Checkbox, this.props);\n      var ElementType = getElementType(Checkbox, this.props);\n\n      var _partitionHTMLProps = partitionHTMLProps(unhandled, {\n        htmlProps: htmlInputAttrs\n      }),\n          _partitionHTMLProps2 = _slicedToArray(_partitionHTMLProps, 2),\n          htmlInputProps = _partitionHTMLProps2[0],\n          rest = _partitionHTMLProps2[1]; // Heads Up!\n      // Do not remove empty labels, they are required by SUI CSS\n\n\n      var labelElement = createHTMLLabel(label, {\n        defaultProps: {\n          htmlFor: id\n        },\n        autoGenerateKey: false\n      }) || React.createElement(\"label\", {\n        htmlFor: id\n      });\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        onClick: this.handleClick,\n        onChange: this.handleChange,\n        onMouseDown: this.handleMouseDown,\n        onMouseUp: this.handleMouseUp\n      }), React.createElement(Ref, {\n        innerRef: this.inputRef\n      }, React.createElement(\"input\", _extends({}, htmlInputProps, {\n        checked: checked,\n        className: \"hidden\",\n        disabled: disabled,\n        id: id,\n        name: name,\n        readOnly: true,\n        tabIndex: this.computeTabIndex(),\n        type: type,\n        value: value\n      }))), React.createElement(Ref, {\n        innerRef: this.labelRef\n      }, labelElement));\n    }\n  }]);\n\n  return Checkbox;\n}(Component);\n\n_defineProperty(Checkbox, \"defaultProps\", {\n  type: 'checkbox'\n});\n\n_defineProperty(Checkbox, \"autoControlledProps\", ['checked', 'indeterminate']);\n\n_defineProperty(Checkbox, \"handledProps\", [\"as\", \"checked\", \"className\", \"defaultChecked\", \"defaultIndeterminate\", \"disabled\", \"fitted\", \"id\", \"indeterminate\", \"label\", \"name\", \"onChange\", \"onClick\", \"onMouseDown\", \"onMouseUp\", \"radio\", \"readOnly\", \"slider\", \"tabIndex\", \"toggle\", \"type\", \"value\"]);\n\nexport { Checkbox as default };\nCheckbox.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Whether or not checkbox is checked. */\n  checked: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** The initial value of checked. */\n  defaultChecked: PropTypes.bool,\n\n  /** Whether or not checkbox is indeterminate. */\n  defaultIndeterminate: PropTypes.bool,\n\n  /** A checkbox can appear disabled and be unable to change states */\n  disabled: PropTypes.bool,\n\n  /** Removes padding for a label. Auto applied when there is no label. */\n  fitted: PropTypes.bool,\n\n  /** A unique identifier. */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Whether or not checkbox is indeterminate. */\n  indeterminate: PropTypes.bool,\n\n  /** The text of the associated label element. */\n  label: customPropTypes.itemShorthand,\n\n  /** The HTML input name. */\n  name: PropTypes.string,\n\n  /**\n   * Called when the user attempts to change the checked state.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and proposed checked/indeterminate state.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Called when the checkbox or label is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Called when the user presses down on the mouse.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * Called when the user releases the mouse.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onMouseUp: PropTypes.func,\n\n  /** Format as a radio element. This means it is an exclusive option. */\n  radio: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['slider', 'toggle'])]),\n\n  /** A checkbox can be read-only and unable to change states. */\n  readOnly: PropTypes.bool,\n\n  /** Format to emphasize the current selection state. */\n  slider: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['radio', 'toggle'])]),\n\n  /** A checkbox can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Format to show an on or off choice. */\n  toggle: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['radio', 'slider'])]),\n\n  /** HTML input type, either checkbox or radio. */\n  type: PropTypes.oneOf(['checkbox', 'radio']),\n\n  /** The HTML input value. */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n} : {};","import React, { useContext, useEffect, useState } from \"react\";\r\nimport axios from \"../../utils/axiosInstance\";\r\nimport { Header, Checkbox, Button, Icon, Grid, Input, Segment } from \"semantic-ui-react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nimport { siteStatusLiteral } from \"../../utils/consts\";\r\n\r\nconst Settings = (props) => {\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [status, setStatus] = useState(1);\r\n\r\n    useEffect(() => {\r\n\r\n        async function loadStatus() {\r\n\r\n            try {\r\n\r\n                const { data } = await axios.get(\r\n                    \"/admin/status\",\r\n                    { headers: { Authorization: `Bearer ${auth.admin.token}` } }\r\n                );\r\n\r\n                setStatus(data.status);\r\n\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n\r\n        loadStatus();\r\n\r\n    }, []);\r\n\r\n    const initialValues = {\r\n        lockdown: status === siteStatusLiteral.LOCKED,\r\n        maintain: status === siteStatusLiteral.MAINTAIN\r\n    }\r\n\r\n    const createAdmin = async (values, fr) => {\r\n\r\n        try {\r\n\r\n            const { data } = await axios.post(\r\n                \"/admin/new\", values,\r\n                { headers: { Authorization: `Bearer ${auth.admin.token}` } }\r\n            );\r\n\r\n            if (data.success) {\r\n                toast.success(data.msg);\r\n            } else{\r\n                toast.error(data.msg);\r\n            }\r\n\r\n            fr.setSubmitting(false);\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n            fr.setSubmitting(false);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (values, fr) => {\r\n\r\n        try {\r\n\r\n            let status = 1;\r\n\r\n            if (values.lockdown) {\r\n                status = siteStatusLiteral.LOCKED;\r\n            } else if (values.maintain) {\r\n                status = siteStatusLiteral.MAINTAIN;\r\n            }\r\n\r\n            const { data } = await axios.patch(\r\n                \"/admin/status\", { status },\r\n                { headers: { Authorization: `Bearer ${auth.admin.token}` } }\r\n            );\r\n\r\n            if (data) {\r\n                toast.success(\"Updated Successfully!\");\r\n            } else {\r\n                toast.error(\"Something went wrong, try again!\");\r\n            }\r\n\r\n            fr.setSubmitting(false);\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n            fr.setSubmitting(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"padded-content\">\r\n            <Header size=\"large\" dividing>\r\n                Settings\r\n            </Header>\r\n            <Grid columns=\"equal\">\r\n                <Grid.Column>\r\n                    <Header size=\"medium\" dividing>\r\n                        Site Status\r\n                    </Header>\r\n                    <Segment>\r\n                        <Formik\r\n                            enableReinitialize\r\n                            initialValues={initialValues}\r\n                            onSubmit={handleSubmit}\r\n                        >\r\n                            {fr => (\r\n                                <Form>\r\n                                    <div style={{ marginBottom: \"20px\" }}>\r\n                                        <Checkbox\r\n                                            toggle\r\n                                            label=\"Enable Site Lockdown Mode\"\r\n                                            checked={fr.values.lockdown}\r\n                                            onChange={() => fr.setFieldValue(\"lockdown\", !fr.values.lockdown)}\r\n                                        />\r\n                                    </div>\r\n                                    <div style={{ marginBottom: \"20px\" }}>\r\n                                        <Checkbox\r\n                                            toggle\r\n                                            label=\"Enable Site Maintenanece Mode\"\r\n                                            checked={fr.values.maintain}\r\n                                            onChange={() => fr.setFieldValue(\"maintain\", !fr.values.maintain)}\r\n                                        />\r\n                                    </div>\r\n                                    <Button\r\n                                        primary\r\n                                        icon labelPosition=\"right\"\r\n                                        type=\"submit\"\r\n                                        disabled={fr.isSubmitting}\r\n                                        loading={fr.isSubmitting}\r\n                                    >\r\n                                        Save Settings\r\n                                        <Icon name=\"save\" />\r\n                                    </Button>\r\n                                </Form>\r\n                            )}\r\n                        </Formik>\r\n                    </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                    <Header size=\"medium\" dividing>\r\n                        Create New Admin\r\n                    </Header>\r\n                    <Segment>\r\n                        <Formik\r\n                            initialValues={{\r\n                                email: \"\",\r\n                            }}\r\n                            validationSchema={\r\n                                yup.object().shape({\r\n                                    email: yup.string().email(\"Invalid Email\").required(\"Email is required!\"),\r\n                                })\r\n                            }\r\n                            onSubmit={createAdmin}\r\n                        >\r\n                            {fr => (\r\n                                <Form>\r\n                                    <div className=\"accounts-input\">\r\n                                        <label>Email</label>\r\n                                        <Input\r\n                                            name=\"email\"\r\n                                            fluid placeholder=\"Enter email\"\r\n                                            type=\"email\"\r\n                                            value={fr.values.email}\r\n                                            onBlur={fr.handleBlur}\r\n                                            onChange={fr.handleChange}\r\n                                        />\r\n                                        <p className=\"input-field-error\">\r\n                                            {fr.errors.email && fr.touched.email && fr.errors.email}\r\n                                        </p>\r\n                                    </div>\r\n                                    <Button\r\n                                        primary\r\n                                        icon labelPosition=\"right\"\r\n                                        type=\"submit\"\r\n                                        loading={fr.isSubmitting}\r\n                                        disabled={fr.isSubmitting}\r\n                                    >\r\n                                        Create Admin\r\n                                        <Icon name=\"shield\" />\r\n                                    </Button>\r\n                                </Form>\r\n                            )}\r\n                        </Formik>\r\n                    </Segment>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;"],"sourceRoot":""}